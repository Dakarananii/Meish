extends layout/layout

block meta

  meta(property="og:type" content="article")
  meta(property="og:site_name" content="Meish*")
  meta(property="og:title" content=`${personality.nameJa} | ${personality.label}`)
  meta(property="og:description" content=personality.introduction.slice(0,200))
  meta(property="og:url" content="http://www.meish.me/i/"+owner.username)
  if personality.ogp_path
    meta(property="og:image" content=`${personality.ogp_path}`)
  else
    meta(property="og:image" content='https://meish.s3-ap-northeast-1.amazonaws.com/meish_logo_ogp.png')
  meta(name="twitter:card" content="summary_large_image")
  meta(name="twitter:site" content="@"+owner.username)

  link(rel="stylesheet" href="/css/i/i.css")
  if !(mode == "edit")
    link(rel="stylesheet" href="/css/i/notme.css")

block content
  // 背景を固定化するCSS（スマホで背景流れちゃう対策）
  - var back = personality.logo_path ? personality.logo_path : '/img/logos/meish_logo_back.png'
  style(type="text/css").
    body::before{
      content: '';
      display:block;
      position:fixed;
      top:0;
      left:0;
      z-index:-1;
      width:100%;
      height: 100vh;
      background:url(#{back});
      background-position:  center center;
      background-repeat: no-repeat;
      background-size: contain;
      -webkit-background-size: contain;
      filter: opacity(50%);
    }
  section(style="border-top: solid 1px; padding-bottom:80px;").page-section.bg-gray
    div.profile.container.justify-content-center.rounded
      // 操作パネル
      if isMe 
        if mode == "edit" && (!personality.ogp_path || !personality.thumbnail_path || !visibility)
          div(style="width:100%; background-color: #F6F6F6; border-radius:10px; padding: 10px;").my-3
            ul(style="margin: 0;")
              if !personality.ogp_path
                li 
                  span
                    a(href="https://www.google.com/search?q=OGP" target="_blank").text-danger  OGPイメージ
                  span.text-dark （URL展開用の画像）がありません 
                  span(data-toggle="modal" data-target="#OgpModal" style="cursor: pointer;").text-info ≫設定する
              if !personality.thumbnail_path
                li 
                  span.text-danger 検索用サムネイル
                  span.text-dark  がありません（TOP画面や検索結果に表示されません）
                  span(data-toggle="modal" data-target="#TachieModal" style="cursor: pointer;").text-info ≫設定する
              if !visibility
                li プロフィールは
                  span.text-danger  非公開状態 
                  span です 

        p
          div.d-flex.flex-wrap
            div.ml-2.mt-2
              // 公開/非公開
              form(method='post' action='/i/'+me.username+'/visibility' id="VisibilityForm" style="display: inline-flex;").edit
                input(type="hidden" name="visibility" value=visibility)
                input(type="hidden" name="_csrf" value=csrfToken)
                if visibility
                  button.btn-sm.btn-outline-danger
                    i.fas.fa-stop  非公開にする
                else
                  button.btn-sm.btn-outline-info 
                    i.fas.fa-play  公開する
            
            div.ml-2.mt-2
              // 編集/プレビュー
              if mode == "edit"
                a#viewLink
                  button.btn-sm.btn-outline-success
                    i.fas.fa-eye  閲覧モードにする
              else
                a#editLink
                  button.btn-sm.btn-outline-info
                    i.fas.fa-pen  編集モードにする

            div.ml-2.mt-2
              // 使い方
              a(href="/howto" target="_blank")
                button.btn-sm.btn-outline-secondary
                  i.fas.fa-question-circle  使いかた

            // Tweetボタン
            div(style="position: relative; top:1px;").ml-2.mt-2
              a(href="https://twitter.com/share" class="twitter-share-button"
                data-url="http://www.meish.me/i/"+owner.username
                data-text=personality.nameJa+"のバーチャルプロフィール / Meish*（βテスト中につきURL公開NG🙅‍♀️）"
                data-lang="ja"
                data-hashtags="Meish"
                data-size="large"
              ) ツイート
              script(async src="https://platform.twitter.com/widgets.js" charset="utf-8")


      // 背景画像
      - var backImage = personality.back_path ? `background-image:url(${personality.back_path}); background-size: cover; background-position:center;border-radius:8px;` : "";
      div(style=backImage).profileImage.row.m-0
        // プロフィール画像
        - var backImage = personality.tachie ? `background-image:url(${personality.tachie}); border-radius:0px;` : "";
        div(style=backImage+"width:100%; margin:0;").profileImage.row
          if personality.tachie
            input(type="hidden" value=personality.tachie)#tachieSource
          div(style="width:550px; max-width:100%;").personalities.py-2
            div

              // 編集ボタン
              div.m-3.text-right
                i(data-toggle="modal" data-target="#BasicInfoModal" style="cursor: pointer; font-size: 1.6rem;").fas.fa-pen.text-info.edit
              
              div(style="margin-top:.83rem;").mx-2.my-3
                // よみ
                div(style="font-size: 1.2rem;").text-secondary.shadow-gray.mx-1.nameEn #{personality.nameEn}
                // 名前
                div(style="font-size: 2.5rem; line-height:1.2;").name 
                  b #{personality.nameJa}
              // プロフィール本文
              hr.profHR
              h5.m-2.text-secondary.shadow-gray
                span #{personality.label}
              p(style="white-space:pre-wrap;").shadow-gray.m-2 #{personality.introduction}
              hr.profHR

            // カテゴリ情報
            .container.m-2.shadow-gray
              .row
                mixin categorizedInfo(title, name)

                  div(style="min-width:250px;").mt-2
                    div(style=" margin-bottom: 0.5rem;").d-flex.align-items-center
                      h3.category #{title}
                        small
                          i(data-toggle="modal" data-target="#"+name+"Modal" style="cursor: pointer;").mx-2.fas.fa-pen.text-info.edit
                    div
                      block

                - var serviceIcons = {}
                - serviceIcons["twitter.com"] = "twitter_icon.png"
                - serviceIcons["mobile.twitter.com"] = "twitter_icon.png"
                - serviceIcons["www.youtube.com"] = "youtube_icon.png"
                - serviceIcons["m.youtube.com"] = "youtube_icon.png"
                - serviceIcons["youtu.be"] = "youtube_icon.png"
                - serviceIcons["marshmallow-qa.com"] = "marshmallow_icon.png"
                - serviceIcons["coconala.com"] = "coconala_icon.jpg"
                - serviceIcons["17.live"] = "17.live_icon.png"
                - serviceIcons["com.nicovideo.jp"] = "niconico_icon.png"
                - serviceIcons["www.nicovideo.jp"] = "niconico_icon.png"
                - serviceIcons["nico.ms"] = "niconico_icon.png"
                - serviceIcons["discord.gg"] = "discord_icon.png"
                - serviceIcons["nana-music.com"] = "nana_icon.png"
                - serviceIcons["note.com"] = "note_icon.png"
                - serviceIcons["skeb.jp"] = "skeb_icon.png"
                - serviceIcons["space.bilibili.com"] = "bilibili_icon.png"
                - serviceIcons["twitcasting.tv"] = "twitcasting_icon.png"
                - serviceIcons["web.iriam.app"] = "iriam_icon.jpg"
                - serviceIcons["www.instagram.com"] = "instagram_icon.png"
                - serviceIcons["www.mirrativ.com"] = "mirrativ_icon.png"
                - serviceIcons["www.openrec.tv"] = "openrec_icon.png"
                - serviceIcons["www.pixiv.net"] = "pixiv_icon.png"
                - serviceIcons["www.pixiv.net/fanbox"] = "pixiv_icon.png"
                - serviceIcons["www.showroom-live.com"] = "showroom_icon.png"
                - serviceIcons["www.twitch.tv"] = "twitch_icon.png"
                - serviceIcons["www.vrchat.com"] = "vrchat_icon.png"
                - serviceIcons["github.com"] = "github_icon.png"
                - serviceIcons["www.mildom.com"] = "mildom_icon.png"
                - serviceIcons["steamcommunity.com"] = "steam_icon.png"
                - serviceIcons["soundcloud.com"] = "soundcloud_icon.png"
                - serviceIcons["www.amazon.co.jp"] = "amazon_icon.png"
                - serviceIcons["www.amazon.jp"] = "amazon_icon.png"
                - serviceIcons["giftee.co"] = "giftee_icon.png"
                - serviceIcons["store.line.me"] = "line_icon.png"
                - serviceIcons["line.me"] = "line_icon.png"
                - serviceIcons["topia.tv"] = "topia_icon.jpg"
                - serviceIcons["user.topia.tv"] = "topia_icon.jpg"
                - serviceIcons["virtual-youtuber.userlocal.jp"] = "userlocal_icon.jpeg"
                - serviceIcons["vtuber-post.com"] = "vpos_icon.jpg"
                - serviceIcons["profile.coconala.com"] = "coconala_icon.jpg"
                - serviceIcons["vtubers.love"] = "vtubers_icon.png"
                  
                // ハッシュタグ
                if hashTags.length > 0 || (isMe && mode == "edit")
                  +categorizedInfo('ハッシュタグ', 'HashTag')
                    each tag in hashTags
                      p.mx-2
                        b
                          a(href="https://twitter.com/hashtag/"+tag.name target="_blank").no-shadow ##{tag.name}
                        if tag.comment
                          span.text-secondary  - #{tag.comment}

                // 活動場所
                if activities.length > 0 || (isMe && mode == "edit")
                  +categorizedInfo('活動場所', 'Activity')
                    each activity in activities
                      p.mx-2
                        if activity.link
                          b
                            a(href=activity.link target="_blank").no-shadow
                              - serviceIcon = serviceIcons[activity.link.split('/')[2]]
                              - serviceIcon = activity.link.match('booth') ? "booth_icon.png" : serviceIcon
                              - serviceIcon = activity.link.match('fanbox') ? "fanbox_icon.jpg" : serviceIcon
                              - serviceIcon = serviceIcon ? serviceIcon : "meish_icon.png"
                              img(src="/img/i/serviceIcons/"+serviceIcon style="width:22px;padding-bottom:4px;")
                              span.mx-2 #{activity.name}
                        else
                          span #{activity.name}

                // 応援方法
                if cheerings.length > 0 || (isMe && mode == "edit")
                  +categorizedInfo('応援する', 'Cheering')
                    each cheer in cheerings
                      p.mx-2 
                        if cheer.link
                          b
                            a(href=cheer.link target="_blank").no-shadow
                              - serviceIcon = serviceIcons[cheer.link.split('/')[2]]
                              - serviceIcon = cheer.link.match('booth') ? "booth_icon.png" : serviceIcon
                              - serviceIcon = cheer.link.match('fanbox') ? "fanbox_icon.jpg" : serviceIcon
                              - serviceIcon = serviceIcon ? serviceIcon : "meish_icon.png"
                              img(src="/img/i/serviceIcons/"+serviceIcon style="width:22px;padding-bottom:4px;")
                              span.mx-2 #{cheer.name}
                        else
                          span #{cheer.name}
            
            // 検索タグ
            div(style="text-shadow: none;")
              h5
                p
                  each tag in tags
                    - var tagLink = "/search?query=" + tag.tagname
                    - var tagHue = tag.tagname.charCodeAt(0) % 36 * 10;
                    - var tagText = tag.tagname
                    a(href=tagLink)
                      span(style="background-color:hsl("+tagHue+", 50%, 45%);").badge.badge-secondary.p-2.m-1 #{tagText}
                  // 編集ボタン
                  i(data-toggle="modal" data-target="#BasicInfoModal" style="position:relative; top:3px; cursor: pointer; font-size: 1.4rem;").m-1.fas.fa-pen.text-info.edit
              div.edit.mx-1.mb-2
                a(href="/tag_suggest" target="_blank") 人気タグを見る

      // ママ/パパ（キャラ絵右下）
      .text-right
        if parents.length != 0
          each parent in parents
            div
              - var parentDisplay = parent.relationship ? `${parent.relationship}: ${parent.name}` : parent.name
              if parent.link
                a(href=parent.link) #{parentDisplay}
              else
                span #{parentDisplay}
        else
          h5.edit 関係者・協力者
        i(data-toggle="modal" data-target="#ParentModal" style="cursor: pointer;").fas.fa-pen.text-info.edit

  // サブセクション雛形
  mixin subSection(title,bg)
    section(class=bg)#about.page-section
      div(style="max-width:100%;").container
        .text-center
          if title
            h1 #{title}
            hr.divider.my-4
          block

  // 立ち絵
  if tachies.length > 0 || (isMe && mode == "edit")
    // コンテンツ
    +subSection('立ち絵')
      .d-flex.flex-wrap
          // 初期表示
          - tachiesView = tachies.length != 0 ? tachies : [{path: '/img/i/add.png', name: 'Title', comment: '', updatedAt: new Date()}]
          each tachie in tachiesView
            .col-sm.mx-auto.m-2
              .tachie.card
                // 画像
                img(src=`${tachie.path}` style="" data-toggle="modal" data-target="#TachieModal").tachie.card-img-top
                if tachie.name || tachie.comment
                  div(style="background-color:rgba(255,255,255,1.00);").card-body
                    // タイトル、コメント
                    h5.card-title #{tachie.name}
                    p.card-text #{tachie.comment}

  // キャラデザ
  if personality.design_path || (isMe && mode == "edit")
    +subSection('キャラクターデザイン', 'bg-white')
        if isMe && mode == "edit"
          p.text-secondary 三面図などキャラクターのディティールがわかる画像を設定します
        .row.justify-content-center
          .card
            - var design_path = personality.design_path ? personality.design_path : "/img/i/add.png";
            - var description = personality.design_path ? personality.design_comment : "キャラデザの詳細とか書けます";
            div.rounded.img-fluid.card-img-top
              img(src=`${design_path}` style="max-width:100%; max-height:500px;" data-toggle="modal" data-target="#DesignModal")
            if description
              .card-body
                p(style="white-space:pre-wrap;").card-text #{description}

  // 紹介動画
  if personality.movie_id || (isMe && mode == "edit")
    +subSection('紹介動画')
      if isMe && mode == "edit"
        p.text-secondary YouTubeのみ対応
        button(data-toggle="modal" data-target="#MovieModal").btn.btn-info.m-3 動画URLを入力
      if personality.movie_id
        div(style="width:90%; max-width:640px;").mx-auto.m-4
          .youtube-inner
            iframe(width="640" height="360" src="https://www.youtube.com/embed/"+personality.movie_id frameborder="0" allow="autoplay; encrypted-media" allowfullscreen).mx-auto

  // ロゴ/背景
  if isMe && mode == "edit"
    div.edit
      +subSection('ロゴ/背景', 'bg-white')
        p.text-secondary ページ背景に表示されます
          br
          | イメージ画像やキャラクターロゴを設定してください
        .row.justify-content-center
          - var logoPath = personality.logo_path ? personality.logo_path : "/img/i/add.png";
            .card
              div.rounded.img-fluid.card-img-top
                img(src=`${logoPath}` style="width:auto;max-height:400px;" data-toggle="modal" data-target="#LogoModal").rounded.img-fluid

  // OGP画像
  if isMe && mode == "edit"
    div.edit
      +subSection('OGPイメージ')
        p.text-secondary TwitterなどにURLを貼り付けた時の画像展開で表示されます
          - var ogpPath = personality.ogp_path ? personality.ogp_path : "/img/i/add.png";
          div(style="max-width:600px;").card.mx-auto
            div.rounded.img-fluid.card-img-top
              img(src=`${ogpPath}` style="max-height:400px; width:100%" data-toggle="modal" data-target="#OgpModal").rounded.img-fluid

  // サムネイル
  if isMe && mode == "edit"
    div.edit
      +subSection('検索サムネイル', 'bg-white')
        p.text-secondary 検索ページで表示されます
          br
          small （立ち絵登録時に設定できます）
        div(style=`border: solid 1px lightgray; border-radius: .25rem; width: 200px; height: 350px; background-image: url(${personality.thumbnail_path}); background-size: contain; background-position:center; background-repeat: no-repeat; background-color: rgba(255,255,255,0.5); margin:auto;`).img-fluid

  if isMe && mode == "edit"
    // モーダル雛形
    mixin modal(modalParams)
      div(style="max-width:100%;" tabindex="-1" role="dialog" aria-labelledby=modalParams.name+"ModalLabel" aria-hidden="true" id=modalParams.name+"Modal").modal.fade
        div(role="document").modal-dialog
          .modal-content
            - var actionString = `/i/${me.username+modalParams.action}?_csrf=${csrfToken}`; 
            form(method='post' action=actionString enctype=modalParams.enctype id=modalParams.name+"Form")
              .modal-header
                h5(id=modalParams.name+"ModalLabel").modal-title #{modalParams.title}
                button.close(type="button" data-dismiss="modal" aria-label="Close")
                  span(aria-hidden="true") &times;
              .modal-body
                input(type="hidden" name="deleted" value="0" id=modalParams.name+"Deleted")
                if block
                  block
              .modal-footer
                button(type="button" id=modalParams.name+"DeleteBtn").btn.btn-danger 削除
                button(type="button" data-dismiss="modal").btn.btn-secondary キャンセル
                button(type="button" id=modalParams.name+"SubmitBtn").btn.btn-primary 更新

    // プロフィールモーダル
    +modal({name: 'BasicInfo', action: '/basicinfo', title: '基本プロフィール', enctype: "multipart/form-data"})
      .form-group.text-center
        #ProfileImage
      
          // 既存の画像
          - var backSample = personality.back_path ? personality.back_path : "/img/i/nobackimage.jpg";
          div(style=`background-image: url('${backSample}'); background-size: cover; border-radius:10px;width:75%;margin:auto;`).backImagePreview.imagePreview
            - var tachieSample = personality.tachie ? `background-image: url('${personality.tachie}'); background-position: bottom right;` : `background-image: url('/img/i/noTachie.png'); background-position: bottom right;`;
            div(style=tachieSample).profileImagePreview.imagePreview
         
          div
            // 背景画像ファイルInput
            label.input-group-btn.m-2
              span.btn.btn-primary 背景画像を選択
                input(type="file" name="back" accept="image/jpeg, image/png" style="display:none;")#BackImageFileInput.form-control.my-2
            // プロフィール画像ファイルInput
            label.input-group-btn.m-2
              span.btn.btn-primary 立ち絵を選択
                input(type="file" name="tachie" accept="image/jpeg, image/png" style="display:none;")#ProfileImageFileInput.form-control.my-2
        
          .text-secondary.mb-2
            small 背景: 2MB以下, 1920x1080px以上, 横長jpg推奨
              br
              span 立ち絵: 2MB以下, 高さ1080px以上, 縦長透過png推奨

          // アス比スライダー
          div.d-flex.justify-content-center
            div(style="width:100px;").text-right
              span スマホ表示
            input(type="range" id="aspectRatioRange" style="width:50%;" min="18" max="72" oninput="$('.backImagePreview').css('width', $('#aspectRatioRange').val()+'%');").custom-range.mx-2
            div(style="width:100px;").text-left
              span PC表示

        if personality.back_path || personality.tachie
          .align-middle.form-check
            input(type="checkbox" name="imageClear" onchange="$('#ProfileImage').toggle();")#ProfileImageClearCheck.form-check-input.my-2
            label(for="ProfileImageClearCheck").form-check-label 画像をクリア

        input(type="text" placeholder="よみ [50文字まで]" value=personality.nameEn name="nameEn" maxlength="50").form-control.my-2
        input(type="text" placeholder="名前 [50文字まで]" value=personality.nameJa name="nameJa" maxlength="50").form-control.my-2
        input(type="text" placeholder="推しマ、肩書き（〇〇系VTuber）、所属など [50文字まで]" maxlength="50" value=personality.label name="label").form-control.my-2
        textarea(placeholder="自己紹介 [500文字まで]" rows="6" name="introduction" maxlength="500").form-control.my-2
          | #{personality.introduction}
        - var tagtext = tags.map((tag) => { return tag.tagname }).join(' ');
        textarea(placeholder="検索タグ（スペース区切り）[合計100文字まで]" rows="2" name="tags" maxlength="100").form-control.my-2
          | #{tagtext}
        .align-middle.form-check
          input(type="checkbox" name="isSensitive" checked=(personality.isSensitive == 'on'))#sensitiveCheck.form-check-input.my-2
          label(for="sensitiveCheck").form-check-label 
            small このプロフィールにはセンシティブな表現が含まれる

    // ハッシュタグモーダル
    +modal({name: 'HashTag', action: '/hashtag', title: 'ハッシュタグ', enctype: "application/x-www-form-urlencoded"})
      .form-group
        select(name="target")#HashTagSelection.form-control
          option(value="new" selected) 新規追加
            each hashTag in hashTags
              option(value=hashTag.tagId) #{hashTag.name}
        each hashTag in hashTags
          input(type="hidden" class=hashTag.tagId name=hashTag.name comment=hashTag.comment).hashTagHidden
        input(type="text" placeholder="タグ名（#は自動でつきます）[20文字まで]" name="name" maxlength="20")#HashTagNameForm.form-control.my-2
        input(type="text" placeholder="タグの説明 [20文字まで]" name="comment" maxlength="20")#HashTagCommentForm.form-control.my-2

    // 活動場所モーダル
    +modal({name: 'Activity', action: '/activity', title: '活動場所', enctype: "application/x-www-form-urlencoded"})
      .form-group
        select(name="target")#ActivitySelection.form-control
          option(value="new" selected) 新規追加
          each activity in activities
            option(value=activity.activityId) #{activity.name}
        each activity in activities
          input(type="hidden" class=activity.activityId name=activity.name link=activity.link).activityHidden
        input(type="text" placeholder="表示名 [20文字まで]" name="name" maxlength="20")#ActivityNameForm.form-control.my-2
        input(type="text" placeholder="URL [200文字まで]" name="link" maxlength="200")#ActivityLinkForm.form-control.my-2

    // 応援方法モーダル
    +modal({name: 'Cheering', action: '/cheering', title: '応援方法', enctype: "application/x-www-form-urlencoded"})
      .form-group
        select(name="target")#CheeringSelection.form-control
          option(value="new" selected) 新規追加
          each cheering in cheerings
            option(value=cheering.cheeringId) #{cheering.name}
        each cheering in cheerings
          input(type="hidden" class=cheering.cheeringId name=cheering.name link=cheering.link).cheeringHidden
        input(type="text" placeholder="表示名 [20文字まで]" name="name" maxlength="20")#CheeringNameForm.form-control.my-2
        input(type="text" placeholder="URL [200文字まで]" name="link" maxlength="200")#CheeringLinkForm.form-control.my-2

    // ママ/パパモーダル
    +modal({name: 'Parent', action: '/parent', title: 'ママ/パパ', enctype: "application/x-www-form-urlencoded"})
      .form-group
        select(name="target")#ParentSelection.form-control
          option(value="new" selected) 新規追加
          each parent in parents
            option(value=parent.parentId) #{parent.name}
        each parent in parents
          input(type="hidden" class=parent.parentId name=parent.name relationship=parent.relationship link=parent.link).parentHidden
        input(type="text" placeholder="関係 [20文字まで]" name="relationship" maxlength="20")#ParentRelationshipForm.form-control.my-2
        input(type="text" placeholder="名前 [20文字まで]" name="name" maxlength="20")#ParentNameForm.form-control.my-2
        input(type="text" placeholder="URL [200文字まで]" name="link" maxlength="200")#ParentLinkForm.form-control.my-2

    // 立ち絵モーダル
    +modal({name: 'Tachie', action: '/tachie', title: '立ち絵', enctype: "multipart/form-data"})
      .form-group.text-center.m-0
        // 対象
        select(name="target")#TachieSelection.form-control.my-2
          if tachies.length < 5
            option(value="new" selected) 新規追加
          else 
            option(value="max" selected) - (立ち絵は5枚までです)
          if tachies.length > 0
            each tachie in tachies
              option(value=tachie.tachieId).tachie #{tachie.name}
        // プレビュー
        div(style="display:none;").tachie.imagePreview.upload
        each tachie in tachies
          div(class=tachie.tachieId style=`background-image: url('${tachie.path}'); display:none;`).tachie.imagePreview
        // ファイル選択
        label.input-group-btn.m-2
          span.btn.btn-primary ファイルを選択
            input(type="file" name="img" style="display:none" accept="image/jpeg, image/png" required)#TachieFileInput.form-control.my-2
        // 検索サムネにする
        div(style="display:none;")#ThumbnailCheckForm.align-middle.form-check
          input(type="checkbox" name="useThumbnail")#ThumbnailCheck.form-check-input.my-2
          label(for="ThumbnailCheck").form-check-label 検索サムネにする
        // タイトル、説明
        each tachie in tachies
          input(type="hidden" class=tachie.tachieId value=tachie.name).tachieNameHidden
          input(type="hidden" class=tachie.tachieId value=tachie.comment).tachieCommentHidden
        input(type="text" placeholder="タイトル [20文字まで]" name="name" maxlength="20").tachieNameForm.form-control.my-2
        input(type="text" placeholder="コメント [60文字まで]" name="comment" maxlength="60").tachieCommentForm.form-control.my-2
        .text-secondary
          small 2MB以下, jpg/png, 300x600px以上推奨, 5枚まで

    // キャラクターデザインモーダル
    +modal({name: 'Design', action: '/design', title: 'キャラクターデザイン', enctype: "multipart/form-data"})
      .form-group.text-center.m-0
        div(style="display:none;").design.upload.imagePreview
        - var designSample = personality.design_path ? personality.design_path : "/img/i/noimage.jpg";
        div(style=`background-image: url('${designSample}');`).design.imagePreview
        label.input-group-btn.m-2
          span.btn.btn-primary ファイルを選択
            input(type="file" name="img" style="display:none" accept="image/jpeg, image/png" required)#DesignFileInput.form-control.my-2
        textarea(placeholder="コメント [200文字まで]" rows="4" name="comment" maxlength="200").form-control.my-2
          | #{personality.design_comment}
        .text-secondary
          small 2MB以下, 1920x1080px以下-jpg推奨

    // 動画モーダル
    +modal({name: 'Movie', action: '/movie', title: '動画'})
      .form-group.text-center.m-0
        input(type="text" placeholder="YouTubeのURL/ID" name="movie_url" value=personality.movie_id maxlength="100")#MovieUrlForm.form-control.my-2
        .text-secondary
          small 以下の形式で入力できます
            br
            | https://youtu.be/M0UzJSQ8jJ8
            br
            | https://www.youtube.com/watch?v=EnoiwXBRDnI
            br 
            | https://www.youtube.com/embed/-S9j9S9xMe4

    // キャラクターロゴモーダル
    +modal({name: 'Logo', action: '/logo', title: 'キャラクターロゴ', enctype: "multipart/form-data"})
      .form-group.text-center.m-0
        div(style="display:none;").logo.upload.imagePreview
        - var logoSample = personality.logo_path ? personality.logo_path : "/img/i/noimage.jpg";
        div(style=`background-image: url('${logoSample}');`).logo.imagePreview
        label.input-group-btn.m-2
          span.btn.btn-primary ファイルを選択
            input(type="file" name="img" style="display:none" accept="image/jpeg, image/png" required)#LogoFileInput.form-control.my-2
        .text-secondary
          small 2MB以下, 1920x1080px-jpg推奨

    // OGPモーダル
    +modal({name: 'Ogp', action: '/ogp', title: 'OGP画像', enctype: "multipart/form-data"})
      .form-group.text-center.m-0
        div(style="display:none; background-size: cover; width:400px; height:210px;margin:auto;border-radius:.25rem;").ogp.upload.imagePreview
        - var ogpSample = personality.ogp_path ? personality.ogp_path : "/img/i/noimage.jpg";
        div(style=`background-image: url('${ogpSample}'); background-size: cover; width:400px; height:210px;margin:auto;border-radius:.25rem;`).ogp.imagePreview
        label.input-group-btn.m-2
          span.btn.btn-primary ファイルを選択
            input(type="file" name="img" style="display:none" accept="image/jpeg, image/png" required)#OgpFileInput.form-control.my-2
        .text-secondary
          small 2MB以下, jpg推奨, 1200x630に拡大/縮小されます
          br
          small 右下にウォーターマーク（Meishのロゴが入ります）

  // アカウント削除
  if isMe && mode == "edit"
    section(class=bg)#about.page-section.bg-secondary
      .container
        .row.justify-content-center
          .text-center
            form(method='post' action='/i/'+me.username+'/destroy' id="DestroyForm" style="display: inline-flex;").edit.mx-2
              input(type="hidden" name="_csrf" value=csrfToken)
              button(type="submit" onclick="return confirm('本当にアカウントを削除しますか？')").btn-sm.btn-danger アカウントを削除